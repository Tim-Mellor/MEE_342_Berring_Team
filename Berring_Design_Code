%% Berring Design Code - REV 1 
% Tim Mellor and Hidar Abugalal 
% MEE 342 - Principals of Mechanical Design 
%
% Inputs: Radial Load, Axial Load, Shaft Size, RPM
% 
% Outputs: Outer Berring Diameter, Berring Width, and C10 Value, and Berring life 

% ====== Finds values for DEEP GROOVE ball Berrings ======

% Clearing the workspace 
clear; clc; 

%% Input Berring Parameters (Metric) 

RL = 10 ; % Radial Load in KiloNewtons (kN)
AL= 10 ; % Axial Load or Thrust in KiloNewtons (kN)
SS =  16; % Shaft Size in milimeters (mm) 
RPM = 0; % Revolutions per Minute

% Ensuring the Shaft Size fits into the constraints 
if SS > 95 
    fprintf('The Shaft Diameter is too large for this program \n')
elseif SS < 10 
    fprintf('The SHaft is too small for this program \n')
end

%% Chart Values 
id = [10, 12, 15, 17, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95,];
c10 = [5.07, 6.89, 7.8, 9.56, 12.7, 14, 19.5, 25.5, 30.7, 33.2, 35.1, 43.6, 47.5, 55.9, 61.8, 66.3, 70.2, 83.2, 95.6, 108];
c0 = [2.24, 3.1, 3.55, 4.5, 6.2, 6.95, 10, 13.7, 16.6, 18.6, 19.6, 25, 28, 34, 37.5, 40.5, 45, 53, 62, 69.5];
od = [30, 32, 35, 40, 47, 52, 62, 72, 80, 85, 90, 100, 110, 120, 125, 130, 140, 150, 160, 170];
w = [9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32];


%% Finding corresponding C10 and C0 Values for Shaft Size - NEEDS WORK!!
% ===== WILL CONTINUE INTERPOLATING AFTER VALUE IS FOUND =======
C10 = 1; C0 = 1; D = 1; 

for i = 1:length(id);
    d = id(i);

    if SS <= d
        if SS == d % if equal er arent going to interpolate 
            C10 = c10(i)
            C0 = c0(i)
        elseif SS ~= d  % Only interpolate if unequal 
            if SS < d % need an Acccurate value to interpolate with
                C10 = C10 + (SS - c10(i-1)).*((c10(i)-c10(i-1))./(d - D))
                C0 = C0 + (SS - c0(i-1)).*((c0(i)-c0(i-1))./(d - D))
            end
        else % otherwise just update values 
            C10 = c10(i)
            C0 = c0(i)
        end
    end
D = d; 
end

%% Creating a Combined Force - WORKS!!! 

% find e 
m = AL./C0;
if m < 0.014
    e = 0.014 
else 
    e = 0.434.*(m.^-1.011)
end 

% Find X and Y values 
h = AL./RL;
if h <= e
    X = 1;
    Y = 0;
else 
    X = 0.56;
    Y = 17.568.*(e.^2)-16.1.*e+4.7226;
end 

% Creating Equivilent Force 
Fe = (X.*RL) + (Y.*AL);

%% Calculating Bearing Life 
% ========= GIVING INFINITY VALUE ============
a = 3; 
L = ((10.^6)./(RPM.*60)).*((C10./Fe).^a);

%% Finding Berring Size - WORKS!!!
OD = 0; W = 0; 
for u = 1:length(id)
    d = id(u);

    if d < SS
        OD = od(u); 
        W = w(u);
    elseif d == SS
        OD = od(u);
        W = w(u);
    else 
        OD;
        W;
    end

% Maximum size a bering could be 
    if SS > 95
        OD = 200; 
        W = 40; 
    end
end

%% Presenting Results - WORKS!!!

% Bearing Life
fprintf('The bearing should last %d hours \n', L)

% Bearing Size 
fprintf('The outer Diameter of the Bearing is %d Milimeters \n', OD)
fprintf("The width of the bearing is %d Milimeters", W)
